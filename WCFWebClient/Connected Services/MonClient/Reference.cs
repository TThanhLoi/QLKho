//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFWebClient.MonClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Import", Namespace="http://schemas.datacontract.org/2004/07/WcfInsuarances.DataContract")]
    [System.SerializableAttribute()]
    public partial class Import : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Beginning_InventoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Ending_InventoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Import_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Import_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Import_QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Supplier_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Beginning_Inventory {
            get {
                return this.Beginning_InventoryField;
            }
            set {
                if ((this.Beginning_InventoryField.Equals(value) != true)) {
                    this.Beginning_InventoryField = value;
                    this.RaisePropertyChanged("Beginning_Inventory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ending_Inventory {
            get {
                return this.Ending_InventoryField;
            }
            set {
                if ((this.Ending_InventoryField.Equals(value) != true)) {
                    this.Ending_InventoryField = value;
                    this.RaisePropertyChanged("Ending_Inventory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Import_Date {
            get {
                return this.Import_DateField;
            }
            set {
                if ((this.Import_DateField.Equals(value) != true)) {
                    this.Import_DateField = value;
                    this.RaisePropertyChanged("Import_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Import_Price {
            get {
                return this.Import_PriceField;
            }
            set {
                if ((this.Import_PriceField.Equals(value) != true)) {
                    this.Import_PriceField = value;
                    this.RaisePropertyChanged("Import_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Import_Quantity {
            get {
                return this.Import_QuantityField;
            }
            set {
                if ((this.Import_QuantityField.Equals(value) != true)) {
                    this.Import_QuantityField = value;
                    this.RaisePropertyChanged("Import_Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_Id {
            get {
                return this.Product_IdField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_IdField, value) != true)) {
                    this.Product_IdField = value;
                    this.RaisePropertyChanged("Product_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier_Id {
            get {
                return this.Supplier_IdField;
            }
            set {
                if ((object.ReferenceEquals(this.Supplier_IdField, value) != true)) {
                    this.Supplier_IdField = value;
                    this.RaisePropertyChanged("Supplier_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MonClient.IInsuaranceService")]
    public interface IInsuaranceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsuaranceService/GetAllImportProcessesById", ReplyAction="http://tempuri.org/IInsuaranceService/GetAllImportProcessesByIdResponse")]
        WCFWebClient.MonClient.Import[] GetAllImportProcessesById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsuaranceService/GetAllImportProcessesById", ReplyAction="http://tempuri.org/IInsuaranceService/GetAllImportProcessesByIdResponse")]
        System.Threading.Tasks.Task<WCFWebClient.MonClient.Import[]> GetAllImportProcessesByIdAsync(string Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInsuaranceServiceChannel : WCFWebClient.MonClient.IInsuaranceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsuaranceServiceClient : System.ServiceModel.ClientBase<WCFWebClient.MonClient.IInsuaranceService>, WCFWebClient.MonClient.IInsuaranceService {
        
        public InsuaranceServiceClient() {
        }
        
        public InsuaranceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InsuaranceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InsuaranceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InsuaranceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFWebClient.MonClient.Import[] GetAllImportProcessesById(string Id) {
            return base.Channel.GetAllImportProcessesById(Id);
        }
        
        public System.Threading.Tasks.Task<WCFWebClient.MonClient.Import[]> GetAllImportProcessesByIdAsync(string Id) {
            return base.Channel.GetAllImportProcessesByIdAsync(Id);
        }
    }
}
